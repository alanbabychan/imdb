{"ast":null,"code":"import{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const[genre,setGenre]=useState('');const[movies,setMovies]=useState([]);const navigate=useNavigate();useEffect(()=>{const isLoggedIn=localStorage.getItem('isLoggedIn');if(!isLoggedIn){navigate('/login');}},[navigate]);const fetchMovies=async function(selectedGenre){let sort=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;let url=`http://localhost:5000/api/movies?genre=${selectedGenre}`;if(sort){url+='&sort=rating';}const response=await axios.get(url);setMovies(response.data);};const handleLogout=()=>{localStorage.removeItem('isLoggedIn');navigate('/login');};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setGenre('Romance');fetchMovies('Romance');},children:\"Romance\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setGenre('Comedy');fetchMovies('Comedy');},children:\"Comedy\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setGenre('Action');fetchMovies('Action');},children:\"Action\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchMovies(genre,true),children:\"Sort by Rating\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,style:{backgroundColor:'red',marginLeft:'20px'},children:\"Logout\"}),/*#__PURE__*/_jsx(\"ul\",{children:movies.map(movie=>/*#__PURE__*/_jsxs(\"li\",{children:[movie.name,\" - \",movie.rating]},movie._id))})]});}export default Dashboard;","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Dashboard","genre","setGenre","movies","setMovies","navigate","isLoggedIn","localStorage","getItem","fetchMovies","selectedGenre","sort","arguments","length","undefined","url","response","get","data","handleLogout","removeItem","className","children","onClick","style","backgroundColor","marginLeft","map","movie","name","rating","_id"],"sources":["D:/imdb/imdb/frontend/src/pages/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n  const [genre, setGenre] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n    if (!isLoggedIn) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const fetchMovies = async (selectedGenre, sort = false) => {\r\n    let url = `http://localhost:5000/api/movies?genre=${selectedGenre}`;\r\n    if (sort) {\r\n      url += '&sort=rating';\r\n    }\r\n    const response = await axios.get(url);\r\n    setMovies(response.data);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Dashboard</h2>\r\n      <button onClick={() => { setGenre('Romance'); fetchMovies('Romance'); }}>Romance</button>\r\n      <button onClick={() => { setGenre('Comedy'); fetchMovies('Comedy'); }}>Comedy</button>\r\n      <button onClick={() => { setGenre('Action'); fetchMovies('Action'); }}>Action</button>\r\n\r\n      <button onClick={() => fetchMovies(genre, true)}>Sort by Rating</button>\r\n\r\n      <button onClick={handleLogout} style={{ backgroundColor: 'red', marginLeft: '20px' }}>Logout</button>\r\n\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie._id}>{movie.name} - {movie.rating}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CACrD,GAAI,CAACF,UAAU,CAAE,CACfD,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAI,WAAW,CAAG,cAAAA,CAAOC,aAAa,CAAmB,IAAjB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACpD,GAAI,CAAAG,GAAG,CAAG,0CAA0CL,aAAa,EAAE,CACnE,GAAIC,IAAI,CAAE,CACRI,GAAG,EAAI,cAAc,CACvB,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,GAAG,CAACF,GAAG,CAAC,CACrCX,SAAS,CAACY,QAAQ,CAACE,IAAI,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBZ,YAAY,CAACa,UAAU,CAAC,YAAY,CAAC,CACrCf,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAED,mBACEN,KAAA,QAAKsB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzB,IAAA,OAAAyB,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBzB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAM,CAAErB,QAAQ,CAAC,SAAS,CAAC,CAAEO,WAAW,CAAC,SAAS,CAAC,CAAE,CAAE,CAAAa,QAAA,CAAC,SAAO,CAAQ,CAAC,cACzFzB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAM,CAAErB,QAAQ,CAAC,QAAQ,CAAC,CAAEO,WAAW,CAAC,QAAQ,CAAC,CAAE,CAAE,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtFzB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAM,CAAErB,QAAQ,CAAC,QAAQ,CAAC,CAAEO,WAAW,CAAC,QAAQ,CAAC,CAAE,CAAE,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,cAEtFzB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAMd,WAAW,CAACR,KAAK,CAAE,IAAI,CAAE,CAAAqB,QAAA,CAAC,gBAAc,CAAQ,CAAC,cAExEzB,IAAA,WAAQ0B,OAAO,CAAEJ,YAAa,CAACK,KAAK,CAAE,CAAEC,eAAe,CAAE,KAAK,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAAC,QAAM,CAAQ,CAAC,cAErGzB,IAAA,OAAAyB,QAAA,CACGnB,MAAM,CAACwB,GAAG,CAAEC,KAAK,eAChB7B,KAAA,OAAAuB,QAAA,EAAqBM,KAAK,CAACC,IAAI,CAAC,KAAG,CAACD,KAAK,CAACE,MAAM,GAAvCF,KAAK,CAACG,GAAsC,CACtD,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAA/B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}